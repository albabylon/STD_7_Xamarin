Бизнес-логика у вас будет на языке С#, а пользовательский интерфейс будет в основном описан с помощью языка XAML (рассмотрим дальше). 
Далее, при сборке и запуске вашего приложения под каждую платформу, этот один раз универсально описанный вами интерфейс, 
заданный на языке XAML, будет преобразован в нативный интерфейс каждой конкретной платформы


В основе Xamarin лежит фреймворк Mono, представляющий open-source реализацию .NET Framework. 
Mono может выполняться на разных платформах: LINUX, MacOS, Android (в основе которой тоже лежит линуксовое ядро, см. картинку выше), 
или iOS (Unix-подобное ядро, см. картинку).



Когда мы выполняем билд проекта в нашей IDE, происходит парсинг XAML-файлов, создается обычный С#-класс, 
который помещается в файл, имеющий расширение .g.cs, то есть у нас будет файл LoginPage.g.cs , который мы можем обнаружить в папке билда


Генерить полностью или частично интерфейс из XML-кода мы можем и динамически (в процессе выполнения программы).
Пример, когда такое может быть нужно: загрузка XML-кода из веб-сервиса, либо же ситуации, 
когда в зависимости от хода выполнения программы нам необходимо демонстрировать разный интерфейс в разных частях приложения.
Например, мы можем сделать так, чтобы на экране логина наша кнопка при нажатии меняла свой вид, подгружая новые значения свойств из XAML.
Однако при использовании такого подхода производительность будет снижаться, поэтому делать это стоит лишь при необходимости.
private void Login_Click(object sender, EventArgs e)
{
    string xaml = "<Button Text=\"⌛ Выполняется вход..\"  />";
    loginButton.LoadFromXaml(xaml);
}